

DROP TABLE IF EXISTS films CASCADE CONSTRAINTS;
DROP TABLE IF EXISTS genre CASCADE CONSTRAINTS;
DROP TABLE IF EXISTS rating CASCADE CONSTRAINTS;
DROP TABLE IF EXISTS users CASCADE CONSTRAINTS;
DROP TABLE IF EXISTS film_likes CASCADE CONSTRAINTS;
DROP TABLE IF EXISTS user_friends CASCADE CONSTRAINTS;
DROP TABLE IF EXISTS film_genres CASCADE CONSTRAINTS;


CREATE TABLE IF NOT EXISTS films
(
    film_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    film_name character varying(100) NOT NULL,
    description character varying(200),
    release_date date,
    duration integer NOT NULL,
    genre_id integer,
    rating_id integer,
    CONSTRAINT pk_films_film_id PRIMARY KEY (film_id)
);

CREATE TABLE IF NOT EXISTS genre
(
    genre_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    genre_name character varying(100) NOT NULL,
    CONSTRAINT genre_genre_name_unq UNIQUE (genre_name)
);

CREATE TABLE IF NOT EXISTS rating
(
    rating_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    rating_code character varying(10),
    rating_name character varying(200),
    rating_description character varying(500),
    CONSTRAINT rating_rating_code_unq UNIQUE (rating_code)
);

CREATE TABLE IF NOT EXISTS users
(
    user_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email character varying(512) NOT NULL,
    login character varying(50) NOT NULL,
    user_name character varying(50),
    birthday date,
    CONSTRAINT users_email_unq UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS film_likes
(
    film_id INTEGER,
    user_id INTEGER,
    PRIMARY KEY (film_id, user_id)
);

CREATE TABLE IF NOT EXISTS user_friends
(
    user_id INTEGER,
    friend_id INTEGER,
    confirmed boolean,
    PRIMARY KEY (user_id, friend_id)
);

CREATE TABLE IF NOT EXISTS film_genres
(
    film_id INTEGER,
    genre_id INTEGER,
    PRIMARY KEY (film_id, genre_id)
);


ALTER TABLE films
    ADD CONSTRAINT fk_filmsto_rating FOREIGN KEY (rating_id)
    REFERENCES rating (rating_id)
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

ALTER TABLE IF EXISTS film_likes
    ADD CONSTRAINT fk_film_likes_to_films FOREIGN KEY (film_id)
    REFERENCES films (film_id)
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

ALTER TABLE IF EXISTS film_likes
    ADD CONSTRAINT fk_film_likes_to_users FOREIGN KEY (user_id)
    REFERENCES users (user_id)
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

ALTER TABLE IF EXISTS user_friends
    ADD CONSTRAINT fk_user_friends_to_user FOREIGN KEY (user_id)
    REFERENCES users (user_id)
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

ALTER TABLE IF EXISTS user_friends
    ADD CONSTRAINT fk_user_friends_to_user_as_friend FOREIGN KEY (friend_id)
    REFERENCES users (user_id)
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

ALTER TABLE IF EXISTS film_genres
    ADD CONSTRAINT fk_film_genres_to_films FOREIGN KEY (film_id)
    REFERENCES films (film_id)
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

ALTER TABLE IF EXISTS film_genres
    ADD CONSTRAINT fk_film_genres_to_gene FOREIGN KEY (genre_id)
    REFERENCES genre (genre_id)
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
